

/*
 * LoadingBar.java
 *
 * Created on 16-dec-2009, 11:33:03
 */

package nl.shadowlink.tools.shadowmapper.gui;

import nl.shadowlink.tools.shadowlib.utils.GameType;
import nl.shadowlink.tools.shadowmapper.utils.EncryptionKeyExtractor;
import nl.shadowlink.tools.shadowmapper.utils.GuiFunctions;

/**
 * @author Shadow-Link
 */
public class LoadingBar extends javax.swing.JFrame {
    private FileManager fm;

    private final EncryptionKeyExtractor keyExtractor = new EncryptionKeyExtractor();

    /**
     * Creates new form LoadingBar
     */
    public LoadingBar(String gameDir, GameType gameType) {
        this.setIconImage(java.awt.Toolkit.getDefaultToolkit().createImage("icon.png"));
        initComponents();
        this.setVisible(true);
        GuiFunctions.centerWindow$Shadow_Mapper(this);

        byte[] key = keyExtractor.getKey(gameDir);
        if (key == null) {
            throw new IllegalStateException("Unable to detect encryption key");
        }
        fm = new FileManager(this, key);
        fm.setGameDir(gameDir);
        fm.setGameType(gameType);
        fm.start();
    }

    public void setLoadingBarMax(int max) {
        BarLoading.setMinimum(0);
        BarLoading.setMaximum(max);
    }

    public void setLoadingBarValue(int value) {
        BarLoading.setValue(value);
    }

    public void setLabelText(String text) {
        labelLoading.setText(text);
    }

    public void addOneToLoadingBar() {
        BarLoading.setValue(BarLoading.getValue() + 1);
    }

    public void setFinished() {
        this.dispose();
        new MainForm(fm);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelLoading = new javax.swing.JLabel();
        BarLoading = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Loading");
        setResizable(false);

        labelLoading.setText("Loading: ");

        BarLoading.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(BarLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelLoading))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(labelLoading)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BarLoading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar BarLoading;
    private javax.swing.JLabel labelLoading;
    // End of variables declaration//GEN-END:variables

}
